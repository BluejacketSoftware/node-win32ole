{"tagline":"Asynchronous, non-blocking win32ole bindings for [node.js](https://github.com/joyent/node) .","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"# NAME\r\n\r\nnode-win32ole - Asynchronous, non-blocking win32ole bindings for [node.js](https://github.com/joyent/node) .\r\n\r\n\r\n# USAGE\r\n\r\nInstall with `npm install node-win32ole`.\r\n\r\n``` js\r\nvar win32ole = require('win32ole');\r\nvar xla = new win32ole.Dispatch('Excel.Application');\r\n\r\nxla.series([\r\n  function(){\r\n    var wb = xla.Workbooks.Open('test/tmp/test.xls');\r\n  },\r\n  function(){\r\n    var book = wb.Books(1);\r\n  },\r\n  function(){\r\n    var ws = book.WorkSheets(1);\r\n  },\r\n  function(){\r\n    book.Save();\r\n    book.Close();\r\n    xla.Quit();\r\n  }\r\n]);\r\n```\r\n\r\n\r\n# FEATURES\r\n\r\n* So much implements.\r\n* npm\r\n\r\n\r\n# API\r\n\r\nSee the [API documentation](https://github.com/idobatter/node-win32ole/wiki) in the wiki.\r\n\r\n\r\n# BUILDING\r\n\r\nBulding also requires node-gyp to be installed. You can do this with npm:\r\n\r\n    npm install -g node-gyp\r\n\r\nTo obtain and build the bindings:\r\n\r\n    git clone git://github.com/idobatter/node-win32ole.git\r\n    cd node-win32ole\r\n    node-gyp configure\r\n    node-gyp build\r\n\r\nYou can also use [`npm`](https://github.com/isaacs/npm) to download and install them:\r\n\r\n    npm install node-win32ole\r\n\r\n\r\n# TESTS\r\n\r\n[expresso](https://github.com/visionmedia/expresso) is required to run unit tests.\r\n\r\n    npm install -g expresso\r\n    make test\r\n\r\n\r\n# CONTRIBUTORS\r\n\r\n* [idobatter](https://github.com/idobatter)\r\n\r\n\r\n# ACKNOWLEDGEMENTS\r\n\r\nInspired [Win32OLE](http://www.ruby-doc.org/stdlib/libdoc/win32ole/rdoc/)\r\n\r\n\r\n# LICENSE\r\n\r\n`node-win32ole` is [BSD licensed](https://github.com/idobatter/node-win32ole/raw/master/LICENSE).\r\n","name":"node-win32ole"}