{"note":"Don't delete this file! It's used internally to help with page regeneration.","body":"# NAME\r\n\r\nnode-win32ole - Asynchronous, non-blocking win32ole bindings for node.js .\r\n\r\nwin32ole makes accessibility from node.js to Excel, Word, Access, Outlook, InternetExplorer and so on. It does'nt need TypeLibrary.\r\n\r\n\r\n# USAGE\r\n\r\nInstall with `npm install win32ole`.\r\n\r\nIt works as... (version 0.1.x)\r\n\r\n``` js\r\nvar win32ole = require('win32ole');\r\nvar xl = win32ole.client.Dispatch('Excel.Application', 'C'); // locale\r\nxl.Visible = true;\r\nvar book = xl.Workbooks.Add();\r\nvar sheet = book.Worksheets(1);\r\nsheet.Name = 'sheetnameA utf8';\r\nsheet.Cells(1, 2).Value = 'test utf8';\r\nvar rg = sheet.Range(sheet.Cells(2, 2), sheet.Cells(4, 4));\r\nrg.RowHeight = 5.18;\r\nrg.ColumnWidth = 0.58;\r\nrg.Interior.ColorIndex = 6; // Yellow\r\nbook.SaveAs('testfileutf8.xls');\r\nxl.ScreenUpdating = true;\r\nxl.Workbooks.Close();\r\nxl.Quit();\r\n```\r\n\r\nBut now it implements as... (version 0.0.x)\r\n\r\n``` js\r\nwin32ole.client = new win32ole.Client;\r\ntry{\r\n  var win32ole = require('win32ole');\r\n  var xl = win32ole.client.Dispatch('Excel.Application', 'C'); // locale\r\n  xl.set('Visible', true);\r\n  var book = xl.get('Workbooks').call('Add');\r\n  var sheet = book.get('Worksheets', [1]);\r\n  try{\r\n    sheet.set('Name', 'sheetnameA utf8');\r\n    sheet.get('Cells', [1, 2]).set('Value', 'test utf8');\r\n    var rg = sheet.get('Range',\r\n      [sheet.get('Cells', [2, 2]), sheet.get('Cells', [4, 4])]);\r\n    rg.set('RowHeight', 5.18);\r\n    rg.set('ColumnWidth', 0.58);\r\n    rg.get('Interior').set('ColorIndex', 6); // Yellow\r\n    var result = book.call('SaveAs', ['testfileutf8.xls']);\r\n    console.log(result);\r\n  }catch(e){\r\n    console.log('(exception cached)\\n' + e);\r\n  }\r\n  xl.set('ScreenUpdating', true);\r\n  xl.get('Workbooks').call('Close');\r\n  xl.call('Quit');\r\n}catch(e){\r\n  console.log('*** exception cached ***\\n' + e);\r\n}\r\nwin32ole.client.Finalize(); // must be called (version 0.0.x)\r\n```\r\n\r\n\r\n# FEATURES\r\n\r\n* So much implements.\r\n* Implement accessors getter, setter and caller.\r\n* npm\r\n\r\n\r\n# API\r\n\r\nSee the [API documentation](https://github.com/idobatter/node-win32ole/wiki) in the wiki.\r\n\r\n\r\n# BUILDING\r\n\r\nThis project uses VC++ 2008 Express (or later) and Python 2.6 (or later) .\r\n(When using Python 2.5, it needs [multiprocessing 2.5 back port](http://pypi.python.org/pypi/multiprocessing/) .)\r\n\r\nBulding also requires node-gyp to be installed. You can do this with npm:\r\n\r\n    npm install -g node-gyp\r\n\r\nTo obtain and build the bindings:\r\n\r\n    git clone git://github.com/idobatter/node-win32ole.git\r\n    cd node-win32ole\r\n    node-gyp configure\r\n    node-gyp build\r\n\r\nYou can also use [`npm`](https://github.com/isaacs/npm) to download and install them:\r\n\r\n    npm install win32ole\r\n\r\n\r\n# TESTS\r\n\r\n[mocha](https://github.com/visionmedia/mocha) is required to run unit tests.\r\n\r\n    npm install -g mocha\r\n    nmake /a test\r\n\r\n\r\n# CONTRIBUTORS\r\n\r\n* [idobatter](https://github.com/idobatter)\r\n\r\n\r\n# ACKNOWLEDGEMENTS\r\n\r\nInspired [Win32OLE](http://www.ruby-doc.org/stdlib/libdoc/win32ole/rdoc/)\r\n\r\n\r\n# LICENSE\r\n\r\n`node-win32ole` is [BSD licensed](https://github.com/idobatter/node-win32ole/raw/master/LICENSE).\r\n","name":"node-win32ole","tagline":"Asynchronous, non-blocking win32ole bindings for [node.js](https://github.com/joyent/node) .","google":""}